############################################################
#        Source: https://curl.haxx.se/download.html        #
############################################################

if (CURL_ROOT)
    add_custom_target(libcurl ALL 
        ${CMAKE_COMMAND} -E echo "Using prebuilt openssl at ${OPENSSL_ROOT_DIR}"
    )

    add_custom_target(install-libcurl ALL 
    ${CMAKE_COMMAND} -E echo "Using prebuilt openssl at ${OPENSSL_ROOT_DIR} install-libcurl"
    DEPENDS libcurl
    )

    set_property(TARGET install-libcurl PROPERTY FOLDER "install/${ATFRAME_THIRD_PARTY_TARGET_RELATIVE_ROOT_MODULE}")

    set (ATFRAME_THIRD_PARTY_TARGET_LIBCURL_INSTALL_PREFIX ${CURL_ROOT} CACHE PATH "Prebuilt libcurl" FORCE)
    if (ATFRAME_THIRD_PARTY_TARGET_LIBRESSL_INSTALL_PREFIX)
        set (ATFRAME_THIRD_PARTY_LIBCURL_SSL ${ATFRAME_THIRD_PARTY_TARGET_LIBRESSL_INSTALL_PREFIX})
        set (ATFRAME_THIRD_PARTY_LIBCURL_SSL_DEP "install-libressl")
    else (ATFRAME_THIRD_PARTY_TARGET_OPENSSL_INSTALL_PREFIX)
        set (ATFRAME_THIRD_PARTY_LIBCURL_SSL ${ATFRAME_THIRD_PARTY_TARGET_OPENSSL_INSTALL_PREFIX})
        set (ATFRAME_THIRD_PARTY_LIBCURL_SSL_DEP "install-openssl")
    endif ()
    
else ()
    set (ATFRAME_THIRD_PARTY_LIBCURL_VERSION  "7.64.1")
    set (ATFRAME_THIRD_PARTY_LIBCURL_PKG_DIR  "${ATFRAME_THIRD_PARTY_TARGET_LIBCURL_BUILD_DIR}/source")
    set (ATFRAME_THIRD_PARTY_LIBCURL_PKG_PATH "${ATFRAME_THIRD_PARTY_LIBCURL_PKG_DIR}/curl-${ATFRAME_THIRD_PARTY_LIBCURL_VERSION}.tar.gz")
    set (ATFRAME_THIRD_PARTY_LIBCURL_SRC_DIR  "${ATFRAME_THIRD_PARTY_LIBCURL_PKG_DIR}/curl-${ATFRAME_THIRD_PARTY_LIBCURL_VERSION}")

    if (NOT EXISTS ${ATFRAME_THIRD_PARTY_LIBCURL_PKG_DIR})
        file (MAKE_DIRECTORY ${ATFRAME_THIRD_PARTY_LIBCURL_PKG_DIR})
    endif ()

    if (NOT EXISTS ${ATFRAME_THIRD_PARTY_LIBCURL_SRC_DIR})
        if (NOT EXISTS ${ATFRAME_THIRD_PARTY_LIBCURL_PKG_PATH})
            file(DOWNLOAD "https://curl.haxx.se/download/curl-${ATFRAME_THIRD_PARTY_LIBCURL_VERSION}.tar.gz" ${ATFRAME_THIRD_PARTY_LIBCURL_PKG_PATH} SHOW_PROGRESS)
        endif ()

        execute_process(
            COMMAND ${CMAKE_COMMAND} -E tar xvf ${ATFRAME_THIRD_PARTY_LIBCURL_PKG_PATH}
            WORKING_DIRECTORY ${ATFRAME_THIRD_PARTY_LIBCURL_PKG_DIR}
        )
    endif ()

    if (NOT EXISTS ${ATFRAME_THIRD_PARTY_LIBCURL_SRC_DIR})
        message(FATAL_ERROR "${ATFRAME_THIRD_PARTY_LIBCURL_SRC_DIR} not found.")
    endif ()

    unset (ATFRAME_THIRD_PARTY_LIBCURL_BUILD_OPTIONS)

    if (NOT PROJECT_ATFRAME_TARGET_CPU_ABI STREQUAL x86 AND NOT PROJECT_ATFRAME_TARGET_CPU_ABI STREQUAL x86_64)
        list (APPEND ATFRAME_THIRD_PARTY_LIBCURL_BUILD_OPTIONS "-DBUILD_CURL_EXE=NO")
    endif ()

    if (ATFRAME_THIRD_PARTY_TARGET_LIBRESSL_INSTALL_PREFIX)
        set (ATFRAME_THIRD_PARTY_LIBCURL_SSL ${ATFRAME_THIRD_PARTY_TARGET_LIBRESSL_INSTALL_PREFIX})
        set (ATFRAME_THIRD_PARTY_LIBCURL_SSL_DEP "install-libressl")
    else (ATFRAME_THIRD_PARTY_TARGET_OPENSSL_INSTALL_PREFIX)
        set (ATFRAME_THIRD_PARTY_LIBCURL_SSL ${ATFRAME_THIRD_PARTY_TARGET_OPENSSL_INSTALL_PREFIX})
        set (ATFRAME_THIRD_PARTY_LIBCURL_SSL_DEP "install-openssl")
    endif ()

    # standard cmake project
    if (CMAKE_HOST_WIN32 OR CYGWIN OR MINGW OR NOT ATFRAME_THIRD_PARTY_UNIX_BUILD_CONFIG_SCRIPT)
        ATPBTargetBuildThirdPartyByCMake(${ATFRAME_THIRD_PARTY_LIBCURL_SRC_DIR} 
            "-DBUILD_SHARED_LIBS=NO" ${ATFRAME_THIRD_PARTY_LIBCURL_BUILD_OPTIONS} "-DCURL_STATIC_CRT=NO"
            "-DUSE_MANUAL=NO" "-DBUILD_TESTING=NO"
            "-DCMAKE_USE_OPENSSL=YES" "-DCMAKE_USE_MBEDTLS=NO" "-DCURL_CA_PATH=auto"
            "-DOPENSSL_USE_STATIC_LIBS=YES" 
            "-DOPENSSL_ROOT_DIR=${ATFRAME_THIRD_PARTY_LIBCURL_SSL}"
            "-DCMAKE_FIND_ROOT_PATH=${ATFRAME_THIRD_PARTY_LIBCURL_SSL}"
        )
    else ()
        ATPBTargetBuildThirdPartyByConfigure(
            "${ATFRAME_THIRD_PARTY_LIBCURL_SRC_DIR}/configure"
            BASH ${ATFRAME_THIRD_PARTY_UNIX_BUILD_CONFIG_SCRIPT}
            CONFIGURE_ARGS "--with-pic=yes" "--enable-shared=no" "--enable-static=yes" "--disable-manual"
                "--with-ssl=${ATFRAME_THIRD_PARTY_LIBCURL_SSL}"
        )
    endif ()

    add_dependencies(libcurl ${ATFRAME_THIRD_PARTY_LIBCURL_SSL_DEP})
endif()